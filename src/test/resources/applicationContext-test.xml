<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">
  <context:annotation-config/>
  <context:component-scan base-package="com.dxh.practice.service"/>

  <import resource="classpath:mybatis/spring-mybatis.xml"/>

  <!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller
        默认的jdk动态代理是监听接口级别的，当 proxy-target-class 设置为true，则通知spring使用cglib的动态代理，拦截类级别的-->
  <aop:aspectj-autoproxy proxy-target-class="true"/>

  <bean id="serviceProfiler"/>
  <!-- 启用@AspectJ注解 -->
  <aop:config proxy-target-class="true">
    <aop:aspect ref="serviceProfiler">
      <aop:around method="profile" pointcut="execution(* com.dxh.practice.service.*.*(..))"/>
    </aop:aspect>
  </aop:config>
</beans>
